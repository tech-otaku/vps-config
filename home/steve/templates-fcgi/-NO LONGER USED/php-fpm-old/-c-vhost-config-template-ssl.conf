# Created on
# Template file is /home/steve/templates/new/-c-vhost-config-template-ssl.conf
# ssl:YES, www:NO, force-www:NO

<VirtualHost *:80>

	# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
	# WARNING: This virtual host is configured to rewrite 
	# all requests to HTTPS. To avoid a redirect loop ensure
	# EXAMPLE.COM is paused – not active – on Cloudflare.
	# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

    ServerName EXAMPLE.COM
    
    # 403 FORBIDDEN PLACEHOLDER
    
	# Redirect all requests on http:// [:80] to https:// [:443]
    <IfModule mod_rewrite.c>
        RewriteEngine on
        RewriteRule ^.*$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
    </IfModule>
</VirtualHost>

<VirtualHost *:443>
    ServerName EXAMPLE.COM
    
    # 403 FORBIDDEN PLACEHOLDER
    
    ServerAdmin steve@tech-otaku.com

    DocumentRoot /var/www/EXAMPLE.COM/public_html
    
    <Directory /var/www/EXAMPLE.COM/public_html>
        #Options -Indexes +FollowSymLinks +MultiViews
        AllowOverride None					
        AllowOverrideList None				
        #Require all granted
    </Directory>
    
    SetEnv TZ Europe/London
    
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
    #LogLevel alert rewrite:trace1
    
    DirectoryIndex index.php index.html
    
    #ErrorDocument 404 /error.php
    #ErrorDocument 500 /error.php
    #ErrorDocument 502 /error.php
    #ErrorDocument 503 /error.php
    #ErrorDocument 504 /error.php
    
    # Un-comment the following lines to allow mod_status
	# Source: http://articles.slicehost.com/2010/3/26/enabling-and-using-apache-s-mod_status-on-ubuntu
	#<Location /server-status>
		#SetHandler server-status
		#Require all denied
		#Require host localhost
	#</Location>
	
	SSLEngine on
	
	# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
	# START: The following directives enable Perfect Forward Secrecy (PFS),
	# OCSP Stapling, HTTP/2 and HTTP Strict Transport Security (HSTS).
	# The settings are taken from https://ssl-config.mozilla.org/#server=apache&server-version=2.4.29&config=intermediate&openssl-version=1.1.1
	#  
	
	# Perfect Forward Secrecy (PFS)
	SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
	SSLCipherSuite "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
	SSLHonorCipherOrder off
	SSLSessionTickets off

	# OCSP Stapling
	SSLUseStapling on
	
	# The 'SSLStaplingCache' directive configures the cache used to store OCSP responses
    # and is required when OCSP stapling is enabled in virtual hosts with the 'SSLUseStapling'
    # directive. The 'SSLStaplingCache' directive can only be configured at the server config level in
    # /etc/apache2/mods-available/ssl.conf
	#SSLStaplingCache "shmcb:logs/ssl_stapling(32768)"				 
	
	# Enable HTTP/2, if available ['mod_http2' is required (not currently enabled)].
	Protocols h2 http/1.1
	
	# HTTP Strict Transport Security (HSTS) ['mod_headers' is required]
	# 63072000 seconds = 2 years
    Header always set Strict-Transport-Security "max-age=63072000"
    
    #
    # END: 
	# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
	
	SSLCertificateFile /etc/letsencrypt/live/EXAMPLE.COM/cert.pem
	SSLCertificateKeyFile /etc/letsencrypt/live/EXAMPLE.COM/privkey.pem
	# Without SSLCertificateChainFile below the certificate will not be trusted
	SSLCertificateChainFile /etc/letsencrypt/live/EXAMPLE.COM/chain.pem

	# PHP-FPM (For PHP-FPM 7.2 running on Ubuntu Server 18.04 LTS)
	<FilesMatch "\.php$">
		SetHandler "proxy:unix:///var/run/php/php7.2-fpm.POOL.sock|fcgi://localhost/"
	</FilesMatch>
	
	# PHP-FPM (For PHP-FPM 7.0 running on Ubuntu Server 16.04 LTS)
    #<Directory /usr/lib/cgi-bin>
    #    Require all granted
    #</Directory>
    #<IfModule mod_fastcgi.c>
	#	# Uses pool - /etc/php/7.0/fpm/pool.d/POOL.conf
    #    AddHandler php7-fcgi-POOL .php
    #    Action php7-fcgi-POOL /php7-fcgi-POOL virtual
    #    Alias /php7-fcgi-POOL /usr/lib/cgi-bin/php7-fcgi-POOL
    #    FastCgiExternalServer /usr/lib/cgi-bin/php7-fcgi-POOL -socket /var/run/php/php7.0-fpm.POOL.sock -pass-header Authorization
    #</IfModule>
    
	# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
	# START: The directives below would previously be located in 
	# DOCUMENTROOT/.htaccess, 
	# but this virtual host configuration ignores all .htaccess files by 
	# explicitly setting the 'AllowOverride' and 'AllowOverrideList' directives
	# to 'None' - the default.
	#
	
	<Directory "DOCUMENTROOT">

    	# STOP APACHE FROM SERVING .user.ini - [WORDPRESS ONLY]
    	<Files .user.ini>
   		 	Require all denied
		</Files>
		
		# STOP APACHE FROM SERVING wp-config - [WORDPRESS ONLY]
		<files wp-config.php>
			Require all denied
		</files>
		
		# BLOCK THE INCLUDE-ONLY FILES - [WORDPRESS ONLY]
		# SOURCE: https://wordpress.org/support/article/hardening-wordpress/#securing-wp-includes
		<IfModule mod_rewrite.c>
			RewriteEngine On
			RewriteBase /
			RewriteRule ^wp-admin/includes/ - [F,L]
			RewriteRule !^wp-includes/ - [S=3]
			RewriteRule ^wp-includes/[^/]+\.php$ - [F,L]
			RewriteRule ^wp-includes/js/tinymce/langs/.+\.php - [F,L]
			RewriteRule ^wp-includes/theme-compat/ - [F,L]
		</IfModule>
		
		# PROTECT FROM SQL INJECTION - [WORDPRESS ONLY]
		Options +FollowSymLinks
		<IfModule mod_rewrite.c>
			RewriteEngine On
			RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
			RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
			RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2})
			RewriteRule ^(.*)$ index.php [F,L]
		</IfModule>

    	# PROTECT wp-login.php - [WORDPRESS ONLY]
    	<Files wp-login.php>
			AuthType Basic
			AuthName "Hackers are not welcome here!"
			AuthGroupFile /dev/null
			AuthBasicProvider dbm
			AuthDBMUserFile ROOTDIRECTORY/.htdbm
			Require user AUTHUSER
		</Files>
		
		# PROTECT info.php
		<Files info.php>
			AuthType Basic
			AuthName "Hackers are not welcome here!"
			AuthGroupFile /dev/null
			AuthBasicProvider dbm
			AuthDBMUserFile ROOTDIRECTORY/.htdbm
			Require user AUTHUSER
		</Files>
		
		# BEGIN WordPress - [WORDPRESS ONLY]
		<IfModule mod_rewrite.c>
			RewriteEngine On
			RewriteBase /
			RewriteRule ^index\.php$ - [L]
			RewriteCond %{REQUEST_FILENAME} !-f
			RewriteCond %{REQUEST_FILENAME} !-d
			RewriteRule . /index.php [L]
		</IfModule>
		# END WordPress
		
	</Directory>

	#
	# END:
	# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
	
</VirtualHost>