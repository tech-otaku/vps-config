# Virtual hosts are configured as name-based as opposed to IP-based. When deciding which virtual host 
# configuration to use, Apache first attempts to match the HTTP 'host' header supplied by the browser 
# with the value of a ServerName or ServerAlias directive in each virtual host configuration. For example,
# the URI 'https://www.tech-otaku.com/networking/securing-access-to-webmin-through-an-ssh-tunnel/' yields 
# an HTTP 'host' header of 'www.tech-otaku.com'. Apache will match this with the ServerAlias directive in
# the virtual host configuration defined in /etc/apache2/sites-enabled/tech-otaku.com.conf and use this 
# configuration.

# If Apache is unable to find a match for the HTTP 'host' header in any of the virtual host configurations, 
# it uses the first virtual host configuration it finds. This will either be the first virtual host 
# configuration in a file containing two or more virtual host configurations, or the first file listed-alphabetically
# (this file) when there are two or more files containing separate virtual host configurations. For example,
# the URI 'http://94.130.177.167/networking/securing-access-to-webmin-through-an-ssh-tunnel/' yields an HTTP 
# 'host' header of '94.130.177.167'. Apache will be unable to match this with any ServerName or ServerAlias
# directives in any virtual host configurations. Consequently, it will use the first file listed alphabetically 
# (this file). As this is a non-HTTPS request on port 80, Apache will use the first virtual host configuration
# in this file matching port 80.

<VirtualHost *:80>

    ServerName localhost
    DocumentRoot /var/www/html
    
    # Return 403 Forbidden for all requests handled by to this default virtual host
    <Directory /var/www/html>
        Require all denied
    </Directory>

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined

</VirtualHost>


# It's a little more complicated if the same URI is accessed over HTTPS. The HTTP 'host' header is the same; 
# '94.130.177.167' and as Apache is unable to find a match it will default to first virtual host configuration
# in this file matching port 443. For this to work, it appears that a valid SSL certificate must be defined within
# the virtual host configuration. The HTTP 'host' header '94.130.177.167' doesn't match the SSL certificate name:
# 'catchall.tech-otaku.com'. Consequently, the browser will issue a warning that the connection is not private. At
# this point should the user wish to proceed, they will be greeted with the same 403 Forbidden message. 

<VirtualHost *:443>

    ServerName localhost
    DocumentRoot /var/www/html
    
    # Return 403 Forbidden for all requests routed to this default virtual host
    <Directory /var/www/html>
        Require all denied
    </Directory>
    
    SSLEngine on
    # The certificate named 'catchall.tech-otaku.com' was generated specifically for this default virtual host
    # configuration. While there is no virtual host with a ServerName or ServerAlias of 'catchall.tech-otaku.com', 
    # a valid DNS 'A' record named 'catchall' is required for the domain tech-otaku.com in order to generate and 
    # re-new this certificate using the Certbot Cloudflare DNS plugin.  
    SSLCertificateFile /etc/letsencrypt/live/catchall.tech-otaku.com/cert.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/catchall.tech-otaku.com/privkey.pem
    # Without SSLCertificateChainFile below the certificate will not be trusted
    SSLCertificateChainFile /etc/letsencrypt/live/catchall.tech-otaku.com/chain.pem

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined

</VirtualHost>
















